trigger:
 batch: true
 branches:
   include:
   - dev
 paths:
   exclude:
   - azure-pipelines.yml
   - azure-pipelines-TagnRelease.yml
   - azure-pipelines-deploy-prod.yml
   - pom.xml

pool:
  vmimage: 'ubuntu-latest'
variables:
 - group: Azure-Variable-Group
 - name: MAVEN_CACHE_FOLDER
   value: $(Pipeline.Workspace)/.m2/repository
 - name: MAVEN_OPTS
   value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:
- task: CacheBeta@0
  inputs: 
   key: $(Build.SourcesDirectory)/pom.xml
   path: $(MAVEN_CACHE_FOLDER)
   securityNamespace: cache
  displayName: Cache Maven local repositories
  
- task: DownloadSecureFile@1
  name: settingsxml
  inputs:
    secureFile: 'settings.xml'

- task: PowerShell@2
  inputs: 
   targetType: 'inline'
   script: |
     New-Item -Type Directory -Force "${HOME}/.m2"
#     Copy-Item -Force "$(settings.xml.secureFilePath)" "${HOME}/.m2/settings.xml"

- task: Maven@3
  inputs:
   mavenPomFile: 'pom.xml'
   mavenOptions: '-Xmx3072m'
   jdkVersionOption: '1.8'
   jdkArchitectureOption: 'x64'
   mavenAuthenticateFeed: true
   publishJUnitResults: false
   javaHomeOption: 'JDK Version'
   mavenVersionOption: 'Default'
   effectivePomSkip: true
   sonarQubeRunAnalysis: false
   goals: 'clean install package deploy $(MAVEN_OPTS) -DmuleDeploy -Dserver=$(server) -Denvironment= $(environment) -Dworkers = $(workers) -DworkerType = $(workerType) -Dapp.runtime = $(app.runtime) -Dapp.name = $(app.name)'
